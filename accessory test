import pandas as pd
import argparse
import sys
import random


AccessoriesDict = {1: "Sunglasses", 2: "Chain", 3: "Diamond Ring", #dictionary needed for random accessories
                   4: "Loop Earings", 5: "Apple Watch"}



def parse_args():
    parser = argparse.ArgumentParser(description="Smart outfit planner")

    parser.add_argument("-accessory", type=int, default = 0) #argument parser -accessory is need to be optional and not positional
    args = parser.parse_args()
    return args
    

    

    
    # if args.num_accessories is not None and args.num_accessories > 5:
    #     raise ValueError('You cant have more than five accessories')
    
    #return {

        #'accessory' : args.accessory
    #}
    
if __name__ == "__main__":
    args = parse_args()


class Outfit():
    """outfit class
    """
    #outfit class to be full developed later with clothing items/outfits
    #needs to add sections of clothing in here
    
    
    def __init__(self):
        """this function initializes the accessories list
        """
        self.accessories = [] #list creation for accessories
    

    def addAccessory(self, accessorynum = 0): #default accessories on an outfit is 0
        """Adds string "None" to accessory list in this instance of the 
        class. If the calling function has a second parameter that parameter
        is added to the accessory list instead of "None" as the default
        

        Args:
            accessory (str, optional): A string to be added to the list of 
            accessories in this instance of the class. Defaults to "jewlery".
        """
        for i in range(accessorynum): #the user enters a number in the command line anywhere from 0 - 5 
            self.accessories.append(AccessoriesDict[random.randint(1, 5)]) 
        if accessorynum == 0: #if user never puts in a value the defualt is 0 but if they put 0 in still works the same
            self.accessories.append("None") #no ccessories paired with the outfit so accesories is none
            
#testing  
myoutfit = Outfit() #outfit is not paired to outfit class
myoutfit.addAccessory(args.accessory) #calls the function
print(myoutfit.accessories) #prints the function
 